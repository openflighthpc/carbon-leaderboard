<h1 class="mb-5"><%= @device.display_name %></h1>

<style>
table, th, td {
  border:1px solid black;
}
td {
  text-align: center;
}
</style>

<div class="cl-card flex-column-centred mb-4">
  <div class="device-type-wrapper">
    <%= image_tag 'logo.svg' %>
    <div>
      <h4><%= @device.platform %></h4>
      <% if @device.instance_type %>
        <span><%= @device.instance_type %></span>
      <% end %>
    </div>
  </div>
  <div class="device-specs-wrapper flex-column-centred">
    <div class="flex-column-centred">
      <h5>CPU</h5>
      <span><%= @device.cpus %> x <%= @device.cpu_name %></span>
      <span>(1 x <%= @device.cores_per_cpu %> cores)</span>
    </div>
    <% unless @device.gpus.empty? %>
      <div class="flex-column-centred">
        <h5>GPU</h5>
        <span class="text-center"><%= simple_format(@device.gpu_string) %></span>
      </div>
    <% end %>
    <div class="flex-column-centred">
      <h5>RAM</h5>
      <span><%= @device.ram %>GB</span>
    </div>
    <div class="flex-column-centred">
      <h5>Storage</h5>
      <span class="text-center"><%= simple_format(@device.disk_string) %></span>
    </div>
  </div>
</div>

<div class="full-width-section blurred-frame flex-column-centred">
  <h2>Live emissions</h2>
  <canvas id="live-emissions-chart" class="mb-5"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-annotation/dist/chartjs-plugin-annotation.min.js"></script>
<script>
  const allData = <%= raw(@device.live_emissions_data.to_json) %>;
  const allTooltips = <%= raw(@device.live_emissions_tooltips.to_json) %>;
  const timeRange = <%= raw(@device.live_emissions_time_range.to_json) %>;
  const maxLoad = <%= raw(@device.max) %>;
  const halfLoad = <%= raw(@device.half) %>;
  const minLoad = <%= raw(@device.min) %>;
  const alcesBlue = '#2693D7';
  const borderColour = '#404040';
  const gridColour = '#FFFFFF';
  const loadLineColor = '#8c9cad';

  const ctx = document.getElementById('live-emissions-chart');
  let chart = new Chart(ctx, {
    type: 'line',
    data: {
      datasets: [{
        data: allData,
        borderWidth: 2,
        tooltips: allTooltips,
      }]
    },
    options: {
      clip: false,
      scales: {
        y: {
          beginAtZero: true,
          title: {
            display: true,
            text: 'Equivalent CO2 emissions (kg/h)',
            font: {
              size: 20,
            },
            padding: {
              bottom: 20
            }
          },
          ticks: {
            font: {
              size: 16,
            },
            maxTicksLimit: 8
          },
          grid: {
            color: gridColour
          },
          border: {
            color: borderColour
          }
        },
        x: {
          ticks: {
            color: "#666",
            font: {
              size: 16,
              weight: 'normal',
            }
          },
          grid: {
            color: gridColour
          },
          border: {
            color: borderColour
          },
          type: 'time',
          time: {
            unit: 'day',
            displayFormats: {
              'day': 'd MMM yy',
              'week': 'DD.MM',
              'month': 'do MMM',
              'year': 'MMMM',
            },
          },
          min: timeRange[0],
          max: timeRange[1],
        }
      },
      elements: {
        point: {
          pointBorderColor: alcesBlue,
          pointBorderWidth: 4,
          pointBackgroundColor: '#ffffff',
          pointRadius: 5,
          pointHitRadius: 5
        }
      },
      plugins: {
        clip: false,
        annotation: {
          annotations: {
            max: loadAnnotation(maxLoad, 'Max load'),
            half: loadAnnotation(halfLoad, 'Half load'),
            min: loadAnnotation(minLoad, 'Min load'),
          }
        },
        legend: {
          display: false
        },
        tooltip: {
          displayColors: false,
          bodyAlign: 'center',
          yAlign: 'bottom',
          bodyFont: {
            size: 16
          },
          callbacks: {
            title: function () {
              return ""
            },
            label: function (context) {
              return context.dataset.tooltips[context.dataIndex];
            }
          }
        }
      }
    }
  });

  function loadAnnotation(val, label) {
    return {
      type: 'line',
      yMin: val,
      yMax: val,
      borderColor: loadLineColor,
      borderWidth: 2,
      borderDash: [3, 3],
      label: {
        display: true,
        content: label,
        position: 'end',
        backgroundColor: 'transparent',
        color: loadLineColor,
        font: {
          size: 16,
          weight: 'light',
        },
        yAdjust: -12,
      }
    }
  }
</script>
